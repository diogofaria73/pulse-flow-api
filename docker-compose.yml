version: '3.8'

services:
  # PostgreSQL service for development
  db_dev:
    image: postgres:14
    container_name: pulse_flow_db_dev
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pulse_flow_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - pulse_flow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL service for docker environment
  db_docker:
    image: postgres:14
    container_name: pulse_flow_db_docker
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pulse_flow_db_docker
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_docker:/var/lib/postgresql/data
    networks:
      - pulse_flow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL service for production environment
  db_production:
    image: postgres:14
    container_name: pulse_flow_db_production
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pulse_flow_db_production
    ports:
      - "5434:5432"
    volumes:
      - postgres_data_production:/var/lib/postgresql/data
    networks:
      - pulse_flow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API service for local development
  api_dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pulse_flow_api_dev
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8005:8000"
    env_file:
      - .env
    depends_on:
      db_dev:
        condition: service_healthy
    networks:
      - pulse_flow_network

  # API service for docker environment
  api_docker:
    build: .
    container_name: pulse_flow_api_docker
    ports:
      - "8001:8000"
    env_file:
      - .env.docker
    depends_on:
      db_docker:
        condition: service_healthy
    networks:
      - pulse_flow_network

  # API service for production environment
  api_production:
    build: .
    container_name: pulse_flow_api_production
    ports:
      - "8002:8000"
    env_file:
      - .env.production
    depends_on:
      db_production:
        condition: service_healthy
    networks:
      - pulse_flow_network

volumes:
  postgres_data_dev:
  postgres_data_docker:
  postgres_data_production:

networks:
  pulse_flow_network:
    driver: bridge
